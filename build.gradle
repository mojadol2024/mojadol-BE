plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    google()
    mavenCentral()
}

dependencies {
    // Spring Boot Starter Dependencies
    implementation('org.springframework.boot:spring-boot-starter') {
        exclude group: 'org.yaml', module: 'snakeyaml'
    }
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation ('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.yaml', module: 'snakeyaml'
    }
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Lombok Dependencies
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JWT Dependencies
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // MySQL Connector
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Testing Dependencies
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.security:spring-security-test'

    //swagger
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'

    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.google.code.gson:gson'

    // kakao api
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	//thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // mac dns
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'

    // firebase
    implementation 'com.google.firebase:firebase-admin:9.2.0'
    implementation group: 'com.google.auth', name: 'google-auth-library-oauth2-http', version: '1.23.0'
    implementation group: 'com.google.firebase', name: 'firebase-messaging', version: '22.0.0'

    //mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // ads
    implementation 'com.google.api-ads:google-ads:22.0.0'

    // bootpay
    implementation 'io.github.bootpay:backend:+'

    implementation 'com.github.javafaker:javafaker:1.0.2'

    implementation 'org.yaml:snakeyaml:1.33'

}

tasks.named('test') {
    useJUnitPlatform()
}
